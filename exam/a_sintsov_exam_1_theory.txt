#1
поиск работает быстрее с tuple потому что это неизменяемый объект, данные в tuple хранятся
все рядом друг с другом и переход от одногодо другого быстрее
в то время как остальные коллекции являются изменяемыми и при их обходе реализуется более долгий
ссылочный механизм,а элементы в памяти могут находиться в разных местах

#2
вариант x = [[1, 2, 3, 4]] * 3 создаст внутри x три ссылки на один и тот же объект памяти [1, 2, 3, 4]
при вызове x[0].append(5) получим [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]]

вариант y = [[1, 2, 3, 4] for _ in range(3)] создаст список из элементов, ссылающихся на разные объекты памяти
при вызове y[0].append(5) получим [[1,2,3,4,5],[1,2,3,4],[1,2,3,4]]

#3
class WithCount(object):
    i = 0
    def __init__(self):
        self.i += 1
    @staticmethod
    def getCount():
        return i

#test
for i in range(101):
    WithCount()
print(WithCount.getCount())

#4
def createDict(args: list, kwargs: list):
    for i in range(len(kwargs)-len(args)):
        args.append(None)
    dic = {k : v for k, v in zip(kwargs, args)}
    return dic

#test
print(createDict([1,2,3], ['q','w','e','a','r']))